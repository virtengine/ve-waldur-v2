
worker_processes  1;

events {
    worker_connections  1024;
}


http {

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    sendfile        	on;
    tcp_nopush		on;
    tcp_nodelay		on;
    keepalive_timeout  	65;
    types_hash_max_size 2048;

    server {
        listen       8080;
        server_name  _;

	# Waldur API
	location / {
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Accept-Encoding, Authorization, Content-Type, Origin, User-Agent, X-CSRFToken, X-Requested-With' always;
            add_header 'Access-Control-Allow-Methods' 'DELETE, GET, OPTIONS, PATCH, POST, PUT' always;
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Expose-Headers' 'Link, X-Result-Count' always;

            include uwsgi_params;
            uwsgi_param Host $host;
            uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
            uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
            uwsgi_param X-Real-IP $remote_addr;

            uwsgi_pass waldur-mastermind-uwsgi:8000;
	}
   }
}
