# Waldur Core configuration file
# Format: key = value
# Note: quotes are not stripped! Only use quotes if you need quoted values.

[global]
# Sets Django DEBUG property and debug option for templates
# Note that setting this to 'true' also enables Django Auth as authentication
# mechanism for Django REST Swagger (sets USE_SESSION_AUTH to True).
# See also:
#  - https://docs.djangoproject.com/en/1.11/ref/settings/#debug
#  - http://django-rest-swagger.readthedocs.io/en/stable/settings/#use_session_auth
#
# optional | values: true, false | default: false
#
#debug = false

# Sets Django SECRET_KEY property
# If not set or set to empty string, Waldur Core will fail to start.
# Command to generate a new secret key: head -c32 /dev/urandom | base64
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#secret-key
#
# required | values: (base64 string) | default: (empty string)
#
secret_key = {{ secret_key }}

# Sets Django STATIC_ROOT property
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#static-root
#
# optional | values: (directory path) | default: /usr/share/waldur/static
#
#static_root = /usr/share/waldur/static

# Sets Django MEDIA_ROOT property
# This directory is used for storing files uploaded by users.
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#media-root
#
# optional | values: (directory path) | default: /var/lib/waldur/media
#
#media_root = /var/lib/waldur/media

# Sets Django DEFAULT_FROM_EMAIL property
# If not set or set to empty string, Django default value is used.
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#default-from-email
#
# optional | values: (email) | default: (empty string)
#default_from_email = ''

# Allows user to manage owned customer
# Waldur Core setting: WALDUR_CORE.OWNER_CAN_MANAGE_CUSTOMER
# Allowed operations are: create, edit, delete
#
# optional | values: true, false | default: false
#
#owner_can_manage_customer = false

# Allows user to see all other users
# Waldur Core setting: WALDUR_CORE.SHOW_ALL_USERS
#
# optional | values: true, false | default: true
#
#show_all_users = true

[auth]
# Specifies authentication token lifetime (in seconds)
# Waldur Core setting: WALDUR_CORE.TOKEN_LIFETIME
# Token expiration time is automatically updated on every successful request.
#
# optional | values: (number) | default: 3600
#
#token_lifetime = 3600

# Specifies admin page session cookie file lifetime (in seconds)
# Session expiration time is automatically updated on every successful request.
#
# optional | values: (number) | default: 3600
#
#session_lifetime = 3600

[logging]
# Sets admin email to send errors reports to
# If not set or set to empty string, no error reports will be emailed.
#
# optional | values: (email) | default: (empty string)
#
#admin_email = admin@example.com

# Specifies log file
# If not set or set to empty string, no log will be written to file.
#
# optional | values: (file path) | default: (empty string)
#
log_file = /var/log/waldur/core.log

# Sets log level
# Log messages below this level are not written.
#
# optional | values: CRITICAL, ERROR, WARNING, INFO, DEBUG | default: INFO
#
#log_level = INFO

# Enables sending log messages to Syslog
#
# optional | values: true, false | default: false
#
#syslog = false

[events]
# Specifies event log file
# If not set or set to empty string, no event will be written to file.
# You may need to adjust your SELinux settings if event sending is not working.
#
# optional | values: (file path) | default: (empty string)
#
log_file = /var/log/waldur/events.log

# Sets event log server host
#
# optional | values: (ip or hostname) | default: localhost
#
#logserver_host = localhost

# Sets event log server port
#
# optional | values: (port number) | default: 5959
#
#logserver_port = 5959

# Sets event level
# Events below this level are not written.
#
# optional | values: CRITICAL, ERROR, WARNING, INFO, DEBUG | default: INFO
#
#log_level = INFO

# Enables sending events to Syslog
#
# optional | values: true, false | default: false
#
#syslog = false

# Enables sending events to web hooks and email hooks
#
# optional | values: true, false | default: false
#
#hook = false

[postgresql]
# Sets PostgreSQL database host
# If not set or set to empty string, UNIX socket will be used for connection.
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#host
#
# optional | values: (ip or hostname) | default: (empty string)
#
#host = localhost

# Sets PostgreSQL database port
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#port
#
# optional | values: (port number) | default: 5432
#
#port = 5432

# Sets PostgreSQL database name
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#name
#
# optional | values: (string) | default: waldur
#
#name = waldur

# Sets PostgreSQL user
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#user
#
# optional | values: (string) | default: waldur
#
#user = waldur

# Sets PostgreSQL user password
# See also: https://docs.djangoproject.com/en/1.11/ref/settings/#password
#
# optional | values: (string) | default: waldur
#
#password = waldur

[redis]
# Sets Redis host
# Redis is used as Celery task queue backend and Django cache backend.
# See also:
#  - https://docs.djangoproject.com/en/1.11/topics/cache/
#  - http://docs.celeryproject.org/en/stable/userguide/configuration.html#broker-url
#  - http://docs.celeryproject.org/en/stable/userguide/configuration.html#result-backend
#
# optional | values: (ip or hostname) | default: localhost
#
#host = localhost

# Sets Redis port
#
# optional | values: (port number) | default: 6379
#
#port = 6379

# Sets Redis password
#
# optional | values: (port number) | default: (empty)
#
#password =

[sentry]
# Sets Sentry DSN (data source name)
# If not set or set to empty string, no data will be sent to Sentry.
# You need Python Sentry SDK for this to work (https://pypi.python.org/pypi/sentry-sdk)
# Example: install Python Sentry SDK on CentOS 7:
#
#   yum install python-sentry-sdk
#
# See also:
#  - https://docs.sentry.io/
#  - https://docs.sentry.io/error-reporting/quickstart/?platform=python
#
# optional | values: (url) | default: (empty string)
#
#dsn = https://<key>@sentry.io/<project>

[rest_api]
# Specifies domains allowed to make CORS requests
# Waldur Core setting: CORS_ORIGIN_WHITELIST
# See also: https://github.com/ottoyiu/django-cors-headers#configuration
#
# optional | values: (comma-separated list) | Default: localhost,127.0.0.1
#
#cors_allowed_domains = localhost,127.0.0.1
