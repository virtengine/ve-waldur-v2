# Generated by Django 2.2.13 on 2020-11-02 09:47

from django.contrib.contenttypes.models import ContentType
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations


def offering_data(apps, schema_editor):
    InvoiceItem = apps.get_model('invoices', 'InvoiceItem')
    Resource = apps.get_model('marketplace', 'Resource')

    for invoice_item in InvoiceItem.objects.filter(
        content_type_id=ContentType.objects.get_for_model(Resource).id
    ):
        if invoice_item.object_id:
            try:
                resource = Resource.objects.get(pk=invoice_item.object_id)
                details = {
                    'offering_type': resource.offering.type,
                    'offering_name': resource.offering.name,
                    'offering_uuid': resource.offering.uuid.hex,
                }

                # Preserve existing value of offering_name field if it is already defined.
                if 'offering_name' in invoice_item.details.keys():
                    details.pop('offering_name')

                invoice_item.details.update(details)
                invoice_item.save()
            except ObjectDoesNotExist:
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('marketplace', '0031_optional_offering_type'),
        ('invoices', '0040_invoice_created'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunPython(offering_data),
    ]
